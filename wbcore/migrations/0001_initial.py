# Generated by Django 2.2.6 on 2019-11-26 18:39

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import django_google_maps.fields
import localflavor.generic.models
import rules.contrib.models
import sortedm2m.fields
import wbcore.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('photologue', '0012_auto_20190719_0926'),
        ('auth', '0011_update_proxy_permissions'),
        ('form_designer', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=60)),
                ('first_name', models.CharField(max_length=60)),
                ('last_name', models.CharField(max_length=60)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('date_of_birth', models.DateField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_super_admin', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('since', models.DateField(auto_now_add=True)),
                ('until', models.DateField(blank=True, null=True)),
            ],
            bases=(models.Model, rules.contrib.models.RulesModelMixin),
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('name_de', models.CharField(max_length=200, null=True)),
                ('name_en', models.CharField(max_length=200, null=True)),
                ('name_fr', models.CharField(max_length=200, null=True)),
                ('name_es', models.CharField(max_length=200, null=True)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('postal_code', models.CharField(max_length=20)),
                ('city', models.CharField(max_length=30)),
                ('city_de', models.CharField(max_length=30, null=True)),
                ('city_en', models.CharField(max_length=30, null=True)),
                ('city_fr', models.CharField(max_length=30, null=True)),
                ('city_es', models.CharField(max_length=30, null=True)),
                ('state', models.CharField(blank=True, max_length=30, null=True)),
                ('street', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('slug', models.SlugField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('city', models.CharField(max_length=50)),
                ('city_de', models.CharField(max_length=50, null=True)),
                ('city_en', models.CharField(max_length=50, null=True)),
                ('city_fr', models.CharField(max_length=50, null=True)),
                ('city_es', models.CharField(max_length=50, null=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('founding_date', models.DateField()),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('address', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='wbcore.Address')),
            ],
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('name_de', models.CharField(max_length=100, null=True, unique=True)),
                ('name_en', models.CharField(max_length=100, null=True, unique=True)),
                ('name_fr', models.CharField(max_length=100, null=True, unique=True)),
                ('name_es', models.CharField(max_length=100, null=True, unique=True)),
                ('description', models.CharField(blank=True, max_length=300, null=True)),
                ('description_de', models.CharField(blank=True, max_length=300, null=True)),
                ('description_en', models.CharField(blank=True, max_length=300, null=True)),
                ('description_fr', models.CharField(blank=True, max_length=300, null=True)),
                ('description_es', models.CharField(blank=True, max_length=300, null=True)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('city', models.CharField(blank=True, max_length=30, null=True)),
                ('city_de', models.CharField(blank=True, max_length=30, null=True)),
                ('city_en', models.CharField(blank=True, max_length=30, null=True)),
                ('city_fr', models.CharField(blank=True, max_length=30, null=True)),
                ('city_es', models.CharField(blank=True, max_length=30, null=True)),
                ('state', models.CharField(blank=True, max_length=30, null=True)),
                ('street', models.CharField(blank=True, max_length=30, null=True)),
                ('address', django_google_maps.fields.AddressField(max_length=200, null=True)),
                ('geolocation', django_google_maps.fields.GeoLocationField(max_length=100, null=True)),
            ],
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('name_de', models.CharField(max_length=200, null=True, unique=True)),
                ('name_en', models.CharField(max_length=200, null=True, unique=True)),
                ('name_fr', models.CharField(max_length=200, null=True, unique=True)),
                ('name_es', models.CharField(max_length=200, null=True, unique=True)),
                ('description', models.TextField()),
                ('description_de', models.TextField(null=True)),
                ('description_en', models.TextField(null=True)),
                ('description_fr', models.TextField(null=True)),
                ('description_es', models.TextField(null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to=wbcore.models.save_partner_logo)),
                ('address', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wbcore.Address')),
            ],
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('photo_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='photologue.Photo')),
                ('type', models.CharField(choices=[('header', 'Header'), ('project', 'Project'), ('event', 'Event'), ('blog', 'Blog'), ('news', 'News')], max_length=20, null=True)),
                ('host', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='wbcore.Host')),
                ('uploader', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=('photologue.photo',),
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('name_de', models.CharField(max_length=100, null=True)),
                ('name_en', models.CharField(max_length=100, null=True)),
                ('name_fr', models.CharField(max_length=100, null=True)),
                ('name_es', models.CharField(max_length=100, null=True)),
                ('slug', models.SlugField(unique=True)),
                ('teaser', models.TextField(blank=True, default='')),
                ('description', models.TextField(blank=True, default='')),
                ('description_de', models.TextField(blank=True, default='', null=True)),
                ('description_en', models.TextField(blank=True, default='', null=True)),
                ('description_fr', models.TextField(blank=True, default='', null=True)),
                ('description_es', models.TextField(blank=True, default='', null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('published', models.DateTimeField(auto_now_add=True, null=True)),
                ('rank', models.IntegerField(default=99)),
                ('host', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='wbcore.Host')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wbcore.Photo')),
            ],
            options={
                'ordering': ['rank', 'name'],
            },
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='UserRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_type', models.CharField(choices=[('admin', 'Admin'), ('editor', 'Editor'), ('author', 'Author'), ('member', 'Member'), ('applicant', 'Applicant')], default='applicant', max_length=20)),
                ('membership_fee', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(30)])),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wbcore.Host')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TeamUserRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('role', models.TextField(blank=True, default='')),
                ('email', models.EmailField(blank=True, default='', max_length=100)),
                ('priority', models.IntegerField(default=99)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wbcore.Team')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.AddField(
            model_name='team',
            name='member',
            field=models.ManyToManyField(through='wbcore.TeamUserRelation', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='SocialMediaLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('facebook', 'Facebook'), ('instagram', 'Instagram'), ('youtube', 'YouTube'), ('twitter', 'Twitter')], max_length=20)),
                ('link', models.URLField()),
                ('host', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='wbcore.Host')),
            ],
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('name_de', models.CharField(max_length=200, null=True)),
                ('name_en', models.CharField(max_length=200, null=True)),
                ('name_fr', models.CharField(max_length=200, null=True)),
                ('name_es', models.CharField(max_length=200, null=True)),
                ('slug', models.SlugField(null=True, unique=True)),
                ('short_description', models.TextField()),
                ('short_description_de', models.TextField(null=True)),
                ('short_description_en', models.TextField(null=True)),
                ('short_description_fr', models.TextField(null=True)),
                ('short_description_es', models.TextField(null=True)),
                ('description', models.TextField()),
                ('description_de', models.TextField(null=True)),
                ('description_en', models.TextField(null=True)),
                ('description_fr', models.TextField(null=True)),
                ('description_es', models.TextField(null=True)),
                ('donation_goal', models.DecimalField(blank=True, decimal_places=2, max_digits=11, null=True)),
                ('donation_current', models.DecimalField(blank=True, decimal_places=2, max_digits=11, null=True)),
                ('completed', models.BooleanField(default=False)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('priority', models.DecimalField(decimal_places=2, default=0.5, max_digits=3)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('published', models.DateTimeField(auto_now_add=True, null=True)),
                ('hosts', models.ManyToManyField(related_name='projects', to='wbcore.Host')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wbcore.Photo')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='wbcore.Location')),
                ('partner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wbcore.Partner')),
                ('photos', sortedm2m.fields.SortedManyToManyField(blank=True, help_text=None, related_name='projects', to='wbcore.Photo', verbose_name='photos')),
            ],
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='NewsPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('title_de', models.CharField(max_length=200, null=True)),
                ('title_en', models.CharField(max_length=200, null=True)),
                ('title_fr', models.CharField(max_length=200, null=True)),
                ('title_es', models.CharField(max_length=200, null=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('text', models.TextField()),
                ('text_de', models.TextField(null=True)),
                ('text_en', models.TextField(null=True)),
                ('text_fr', models.TextField(null=True)),
                ('text_es', models.TextField(null=True)),
                ('added', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('published', models.DateTimeField(auto_now_add=True, null=True)),
                ('priority', models.DecimalField(decimal_places=2, default=0.5, max_digits=3)),
                ('range', models.CharField(choices=[('preview', 'Preview'), ('hidden', 'Hidden'), ('global', 'Global'), ('federal', 'Federal'), ('city', 'City')], default='preview', max_length=20, null=True)),
                ('teaser', models.TextField()),
                ('teaser_de', models.TextField(null=True)),
                ('teaser_en', models.TextField(null=True)),
                ('teaser_fr', models.TextField(null=True)),
                ('teaser_es', models.TextField(null=True)),
                ('author_str', models.CharField(blank=True, max_length=200, null=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('host', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='wbcore.Host')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wbcore.Photo')),
                ('photos', sortedm2m.fields.SortedManyToManyField(blank=True, help_text=None, related_name='news_posts', to='wbcore.Photo', verbose_name='photos')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wbcore.Project')),
            ],
            options={
                'get_latest_by': 'published',
            },
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Milestone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wbcore.Project')),
            ],
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Milestep',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('name_de', models.CharField(max_length=50, null=True)),
                ('name_en', models.CharField(max_length=50, null=True)),
                ('name_fr', models.CharField(max_length=50, null=True)),
                ('name_es', models.CharField(max_length=50, null=True)),
                ('description', models.TextField()),
                ('description_de', models.TextField(null=True)),
                ('description_en', models.TextField(null=True)),
                ('description_fr', models.TextField(null=True)),
                ('description_es', models.TextField(null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('reached', models.BooleanField()),
                ('milestone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wbcore.Milestone')),
            ],
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='JoinPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enable_form', models.BooleanField(default=False)),
                ('text', models.TextField()),
                ('sepa_text', models.TextField()),
                ('min_fee', models.IntegerField()),
                ('max_fee', models.IntegerField()),
                ('host', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='wbcore.Host')),
                ('image', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wbcore.Photo')),
            ],
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.AddField(
            model_name='host',
            name='location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='wbcore.Location'),
        ),
        migrations.CreateModel(
            name='Donation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=11)),
                ('note', models.TextField(blank=True, null=True)),
                ('host', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='wbcore.Host')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wbcore.Project')),
            ],
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('title_de', models.CharField(max_length=50, null=True)),
                ('title_en', models.CharField(max_length=50, null=True)),
                ('title_fr', models.CharField(max_length=50, null=True)),
                ('title_es', models.CharField(max_length=50, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('description_de', models.TextField(blank=True, null=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('description_fr', models.TextField(blank=True, null=True)),
                ('description_es', models.TextField(blank=True, null=True)),
                ('file', models.FileField(upload_to=wbcore.models.save_document)),
                ('published', models.DateTimeField(auto_now_add=True, null=True)),
                ('document_type', models.CharField(choices=[('financial_report', 'Finanical Report'), ('annual_report', 'Annual Report'), ('charter', 'Charter'), ('membership_declaration', 'Membership Declaration'), ('other', 'Other')], default='financial_report', max_length=20, null=True)),
                ('valid_from', models.DateField(auto_now_add=True)),
                ('public', models.BooleanField(default=True)),
                ('host', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='wbcore.Host')),
            ],
            options={
                'get_latest_by': 'published',
            },
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('welcome', 'Welcome'), ('about', 'About'), ('idea', 'Idea'), ('history', 'History'), ('teams', 'Teams'), ('contact', 'Contact'), ('transparency', 'Transparency'), ('charter', 'Charter'), ('reports', 'Reports'), ('donate', 'Donate'), ('join', 'Join')], max_length=20, null=True)),
                ('text', models.TextField()),
                ('text_de', models.TextField(null=True)),
                ('text_en', models.TextField(null=True)),
                ('text_fr', models.TextField(null=True)),
                ('text_es', models.TextField(null=True)),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wbcore.Host')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wbcore.Photo')),
            ],
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('reason', models.CharField(choices=[('donation', 'Donation'), ('exit', 'Exit'), ('other', 'Other')], max_length=20)),
                ('subject', models.CharField(max_length=100)),
                ('message', models.TextField()),
                ('submission_date', models.DateTimeField(auto_now_add=True)),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wbcore.Host')),
            ],
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('title_de', models.CharField(max_length=200, null=True)),
                ('title_en', models.CharField(max_length=200, null=True)),
                ('title_fr', models.CharField(max_length=200, null=True)),
                ('title_es', models.CharField(max_length=200, null=True)),
                ('text', models.TextField()),
                ('text_de', models.TextField(null=True)),
                ('text_en', models.TextField(null=True)),
                ('text_fr', models.TextField(null=True)),
                ('text_es', models.TextField(null=True)),
                ('added', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('published', models.DateTimeField(auto_now_add=True, null=True)),
                ('priority', models.DecimalField(decimal_places=2, default=0.5, max_digits=3)),
                ('range', models.CharField(choices=[('preview', 'Preview'), ('hidden', 'Hidden'), ('global', 'Global'), ('federal', 'Federal'), ('city', 'City')], default='preview', max_length=20, null=True)),
                ('teaser', models.TextField()),
                ('teaser_de', models.TextField(null=True)),
                ('teaser_en', models.TextField(null=True)),
                ('teaser_fr', models.TextField(null=True)),
                ('teaser_es', models.TextField(null=True)),
                ('author_str', models.CharField(blank=True, max_length=200, null=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('host', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='wbcore.Host')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wbcore.Photo')),
                ('photos', sortedm2m.fields.SortedManyToManyField(blank=True, help_text=None, related_name='blog_posts', to='wbcore.Photo', verbose_name='photos')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wbcore.Project')),
            ],
            options={
                'get_latest_by': 'published',
            },
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_holder', models.CharField(max_length=100)),
                ('iban', localflavor.generic.models.IBANField(include_countries=('AT', 'BE', 'BG', 'CH', 'CY', 'CZ', 'DE', 'DK', 'EE', 'ES', 'FI', 'FR', 'GB', 'GI', 'GR', 'HR', 'HU', 'IE', 'IS', 'IT', 'LI', 'LT', 'LU', 'LV', 'MC', 'MT', 'NL', 'NO', 'PL', 'PT', 'RO', 'SE', 'SI', 'SK', 'SM'), max_length=34, use_nordea_extensions=False)),
                ('bic', localflavor.generic.models.BICField(max_length=11)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.AddField(
            model_name='user',
            name='address',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wbcore.Address'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='hosts',
            field=models.ManyToManyField(through='wbcore.UserRelation', to='wbcore.Host'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
